<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">


    <!-- ============================================
                   Shiro 核心组件 配置
         ============================================-->

    <!-- 配置 security manager -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="cacheManager" ref="cacheManager"/>
        <property name="authenticator" ref="authenticator"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="realms">
            <list>
                <ref bean="userAuthorizingRealm"/>
            </list>
        </property>
    </bean>

    <!-- 配置 session manager -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- Session 持久化配置 -->
        <property name="sessionDAO" ref="sessionDAO"/>
        <!-- SESSIONID Cookie 配置 -->
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        <!-- 关闭 URL 的 JSESSIONID 重写 -->
        <property name="sessionIdUrlRewritingEnabled" value="false"/>
        <!-- Session 超时配置 -->
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="sessionValidationInterval" value="900000"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <!-- Session 监听器 -->
        <property name="sessionListeners">
            <list>
                <ref bean="shiroSessionListener"/>
            </list>
        </property>
        <!-- Session 缓存管理器 -->
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <!-- Realm 验证器， 配置验证策略 -->
    <bean id="authenticator" class="org.apache.shiro.authc.pam.ModularRealmAuthenticator">
        <property name="authenticationStrategy">
            <bean class="org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy"/>
        </property>
    </bean>

    <!-- Shiro Session 监听器 -->
    <bean id="shiroSessionListener" class="com.ken.wms.security.listener.SessionListener"/>

    <!-- 缓存管理器 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:config/ehcache.xml"/>
    </bean>

    <!-- 会话DAO， 保存 session -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
        <property name="activeSessionsCacheName" value="sessionCache"/>
    </bean>

    <!-- 会话 ID 生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话验证定时器 -->
    <bean id="sessionValidationScheduler"
          class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
        <property name="interval" value="900000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!-- sessionId Cookie 配置 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>

    <!-- 自定义用户授权与认证 Realm 的配置 -->
    <bean id="userAuthorizingRealm" class="com.ken.wms.security.realms.UserAuthorizingRealm"/>


    <!-- ============================================
               Shiro - Spring 整合 配置
        ============================================-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!-- Shiro 的 Filter 配置 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login"/>
        <property name="filters">
            <util:map>
                <entry key="roles" value-ref="anyOfRoles"/>
                <entry key="authc" value-ref="extendFormAuthenticationFilter"/>
                <entry key="kickOut" value-ref="kickOutSessionControlFilter"/>
            </util:map>
        </property>
        <property name="filterChainDefinitionMap" ref="filterChainDefinitionMap"/>
    </bean>

    <!-- 可处理 Ajax 请求的 authc Filter -->
    <bean id="extendFormAuthenticationFilter" class="com.ken.wms.security.filter.ExtendFormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="rememberMeParam" value="rememberMe"/>
        <property name="loginUrl" value="/login"/>
    </bean>

    <!-- 多角色权限验证 Filter -->
    <bean id="anyOfRoles" class="com.ken.wms.security.filter.AnyOfRolesAuthorizationFilter"/>

    <!-- 并发登录人数控制 Filter -->
    <bean id="kickOutSessionControlFilter" class="com.ken.wms.security.filter.KickoutSessionControlFilter">
        <property name="kickOutUrl" value="/login"/>
        <property name="kickOutAfter" value="false"/>
        <property name="maxSessionNum" value="1"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <!-- 配置获取 URL 权限信息的 Factory -->
    <bean id="filterChainDefinitionMap" factory-bean="filterChainDefinitionMapBuilder"
          factory-method="builderFilterChainDefinitionMap"/>
    <bean id="filterChainDefinitionMapBuilder"
          class="com.ken.wms.security.service.FilterChainDefinitionMapBuilder"/>
</beans>